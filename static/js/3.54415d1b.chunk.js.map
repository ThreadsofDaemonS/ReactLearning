{"version":3,"sources":["hoc/withAuthRedirect.js","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/ProfileStatus.jsx","Components/Profile/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","item","src","message","likesCount","maxlength","maxLengthCreator","MyPosts","postsElements","posts","map","p","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostBody","PureComponent","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","MyPostsContainer","profilePage","newPostText","dispatch","addPostActionCreater","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photo","photos","large","profilephoto","Profile","ProfileContainer","userId","match","params","authorisedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.54415d1b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__hAnFV\",\"posts\":\"MyPosts_posts__2gPGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__10FVO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__Jkx3a\",\"img_content\":\"ProfileInfo_img_content__3RTTc\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1j_09\",\"photo\":\"ProfileInfo_photo__3dIyA\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://i.pinimg.com/564x/a3/b1/74/a3b174ae748c6c71a528e476b561df00.jpg\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like </span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { PureComponent } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nlet maxlength = maxLengthCreator(10);\r\n\r\nclass MyPosts extends PureComponent {\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps != this.props || nextState != this.state;\r\n  // }\r\n  render() {\r\n    let postsElements = this.props.posts.map((p) => (\r\n      <Post message={p.message} likesCount={p.likesCount} />\r\n    ));\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let addNewPost = (values) => {\r\n      this.props.addPost(values.newPostBody);\r\n    };\r\n\r\n    return (\r\n      <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddPostFormRedux onSubmit={addNewPost} />\r\n        <div className={s.posts}>{postsElements}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPostBody\"\r\n          validate={[required, maxlength]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addPostActionCreater,\r\n  updateNewPostTextActionCreator,\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {\r\n      dispatch(addPostActionCreater(newPostBody));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\n\r\n// import s from \"./ProfileInfo.module.css\";\r\n// import profilephoto from \"../../../assets/images/user.png\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = { editMode: false, status: this.props.status };\r\n\r\n  activateEditMode = () => {\r\n    this.setState({ editMode: true });\r\n  };\r\n\r\n  deactivateEditMode = () => {\r\n    this.setState({ editMode: false });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          {!this.state.editMode && (\r\n            <div>\r\n              <span onDoubleClick={this.activateEditMode}>\r\n                {this.props.status || \"-----\"}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {this.state.editMode && (\r\n            <span>\r\n              <input\r\n                onChange={this.onStatusChange}\r\n                autoFocus={true}\r\n                onBlur={this.deactivateEditMode}\r\n                value={this.state.status}\r\n              />\r\n            </span>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ProfileStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n// import s from \"./ProfileInfo.module.css\";\r\n// import profilephoto from \"../../../assets/images/user.png\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  let activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  let deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {!editMode && (\r\n          <div>\r\n            <span onDoubleClick={activateEditMode}>\r\n              {props.status || \"-----\"}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        {editMode && (\r\n          <span>\r\n            <input\r\n              onChange={onStatusChange}\r\n              autoFocus={true}\r\n              onBlur={deactivateEditMode}\r\n              value={status}\r\n            />\r\n          </span>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../../common/Preloader/preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport profilephoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatus from \"../ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        <img\r\n          className={s.img_content}\r\n          src=\"https://bipbap.ru/wp-content/uploads/2017/08/16.jpg\"\r\n        />\r\n      </div> */}\r\n      <div className={s.descriptionBlock}>\r\n        <img\r\n          className={s.photo}\r\n          src={\r\n            !props.profile.photos.large\r\n              ? profilephoto\r\n              : props.profile.photos.large\r\n          }\r\n        />\r\n        <div>\r\n          <ProfileStatusWithHooks\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorisedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorisedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}