{"version":3,"sources":["hoc/withAuthRedirect.js","Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogsItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","s","dialog","active","src","id","name","Message","message","maxlength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","DialogsItem","messagesElements","messages","m","dialogsItems","values","addMessage","newMessageBody","compose","newMessageText","dispatch","addMessageActionCreater"],"mappings":"2OAIIA,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,SAGRE,EAAmB,SAACC,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUC,GAAI,eAHJ,GACbC,IAAML,WAYtC,OAJqCM,YAAQX,EAARW,CACnCL,K,oBCjBJM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,qJCYnKC,EATI,SAACN,GAClB,OACE,sBAAKO,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,QAAjC,UACE,qBAAKC,IAAI,4EACT,cAAC,IAAD,CAASV,GAAI,YAAcD,EAAMY,GAAjC,SAAsCZ,EAAMa,WCDnCC,EAJC,SAACd,GACf,OAAO,qBAAKO,UAAWC,IAAEO,QAAlB,SAA4Bf,EAAMe,WC4CvCC,EAAcC,YAAiB,IAmB7BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAjBL,SAACnB,GACtB,OACE,uBAAMqB,SAAUrB,EAAMsB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,SAAU,CAACC,IAAUT,GACrBU,UAAWC,IACXd,KAAK,qBAGT,8BACE,yDAUOe,EA9DC,SAAC5B,GACf,IAAIP,EAAQO,EAAM6B,YAEdC,EAAkBrC,EAAMsC,QAAQC,KAAI,SAACC,GAAD,OACtC,cAACC,EAAD,CAAarB,KAAMoB,EAAEpB,KAAiBD,GAAIqB,EAAErB,IAAZqB,EAAErB,OAGhCuB,EAAmB1C,EAAM2C,SAASJ,KAAI,SAACK,GAAD,OACxC,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAEzB,OAoBtC,OACE,sBAAKL,UAAWC,IAAEuB,QAAlB,UACE,qBAAKxB,UAAWC,IAAE8B,aAAlB,SAAiCR,IACjC,sBAAKvB,UAAWC,IAAE4B,SAAlB,UACE,8BAAMD,IACN,cAACjB,EAAD,CAAqBG,SATP,SAACkB,GACnBvC,EAAMwC,WAAWD,EAAOE,0BCZbC,sBACbvC,aAhBoB,SAACV,GACrB,MAAO,CACLoC,YAAapC,EAAMoC,YACnBc,eAAgBlD,EAAMoC,YAAYc,mBAIb,SAACC,GACxB,MAAO,CACLJ,WAAY,SAACC,GACXG,EAASC,YAAwBJ,SAOrC7C,IAFa8C,CAGbd","file":"static/js/4.4bed96ec.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2XKyv\",\"dialogsItems\":\"Dialogs_dialogsItems__2tV_S\",\"active\":\"Dialogs_active__2UPzg\",\"messages\":\"Dialogs_messages__rkg67\",\"message\":\"Dialogs_message__2xxSS\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={`${s.dialog} ${s.active}`}>\r\n      <img src=\"https://i.pinimg.com/564x/a3/b1/74/a3b174ae748c6c71a528e476b561df00.jpg\" />\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport DialogsItem from \"./DialogItem/DialogsItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogsItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n\r\n  // let newMessageElement = React.createRef();\r\n\r\n  let addMessage = () => {\r\n    // props.dispatch(addMessageActionCreater());\r\n    props.addMessage();\r\n  };\r\n\r\n  let onMessageChange = (e) => {\r\n    let text = e.target.value;\r\n    props.updateNewMessageText(text);\r\n    // props.dispatch(updateNewMessageTextActionCreator(text));\r\n  };\r\n\r\n  let addNewMessage = (values) => {\r\n    props.addMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet maxlength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          validate={[required, maxlength50]}\r\n          component={Textarea}\r\n          name=\"newMessageBody\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add message</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { addMessageActionCreater } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n    newMessageText: state.dialogsPage.newMessageText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessageBody) => {\r\n      dispatch(addMessageActionCreater(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}